stages:
  - build
  - publish

variables:
  PYPI_REPOSITORY_URL: "https://upload.pypi.org/legacy/"
  PYPI_TOKEN: $PYPI_TOKEN  # Set this in your GitLab project's CI/CD settings

.before_script: &before_script_base
  before_script:
    - |
      if [[ -x "$(command -v apt-get)" ]]; then
        apt-get update -y && apt-get install -y curl python3-venv python3-pip
      fi
    - python3 -m venv venv
    - source venv/bin/activate
    - rustup default nightly
    - pip install maturin

.build_template: &build_template
  stage: build
  # use the offical rust image for the build
  image: rust:latest
  <<: *before_script_base
  script:
    - cd file_system
    - maturin build --release --out dist
  artifacts:
    paths:
      - file_system/dist/*

build:linux_x86_64:
  <<: *build_template
  tags:
    - saas-linux-small-amd64

build:windows_x86_64:
  <<: *build_template
  tags:
    - saas-windows-medium-amd64
  before_script:
    - choco install python --version=3.9 rust -y
    - refreshenv
    - rustup default nightly
    - pip install maturin

build:linux_arm64_docker:
  <<: *build_template
  tags:
    - home-lab
    - arm64

publish:
  stage: publish
  image: python:3.9
  script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install twine
    - twine upload --repository-url $PYPI_REPOSITORY_URL --skip-existing -u __token__ -p $PYPI_TOKEN dist/*
  only:
    - tags
  dependencies:
    - build:linux_x86_64
    - build:windows_x86_64
    - build:linux_arm64_docker
